#spring.liquibase.change-log=classpath:/db/changelog/changelog-master.xml
#ogging.level.liquibase = INFO

#spring.datasource.driver-class-name=org.h2.Driver
#spring.datasource.url=jdbc:h2:mem:test;
#spring.datasource.username=sa
#spring.datasource.password=sa

# Enabling H2 Console
#spring.h2.console.enabled=true

spring.mvc.view.prefix = /views/
spring.mvc.view.suffix = .html
server.port=9000

# ==============================================================
# = Data Source
# ==============================================================
#spring.datasource.url= jdbc:mysql://localhost:3306/demoApp?createDatabaseIfNotExist=true&amp;noDatetimeStringSync=true&amp;zeroDateTimeBehavior=convertToNull&amp;autoReconnect=true
spring.datasource.url= jdbc:mysql://localhost:3306/demoApp?createDatabaseIfNotExist=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=P@55w0rd

# ==============================================================
# = Keep the connection alive if idle for a long time (needed in production)
# ==============================================================
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ==============================================================
# = Show or not log for each sql query
# ==============================================================
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true

# ==============================================================
# = Hibernate ddl auto (create, create-drop, update)
# ==============================================================
spring.jpa.hibernate.ddl-auto = none

# ==============================================================
# = The SQL dialect makes Hibernate generate better SQL for the chosen database
# ==============================================================
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder
# ==============================================================
spring.queries.users-query=select email, password, active from user where email=?
spring.queries.roles-query=select u.email, r.role_name from user u inner join user_role ur on(u.user_id=ur.user_id) inner join role r on(ur.role_id=r.role_id) where u.email=?


# ==============================================================
# = Initialize the database using data.sql script
# ==============================================================
spring.datasource.initialization-mode=always


spring.resources.add-mappings=true




spring.datasource.initialize=true

spring.liquibase.change-log=classpath:/db/changelog/changelog-master.xml
logging.level.liquibase = INFO

#logging.file=/home/ubuntu/***/spring-boot-app.log


